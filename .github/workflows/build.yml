name: 编译点名神器

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 20

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的仓库历史

    - name: 显示工作目录内容
      run: |
        Write-Output "当前工作目录内容:"
        Get-ChildItem -Recurse
        Write-Output "====================="

    - name: 检查主程序文件
      run: |
        if (Test-Path "main.py") {
          Write-Output "主程序文件存在: main.py"
          Get-Content main.py -TotalCount 5  # 显示文件前5行
        } else {
          Write-Output "错误: 主程序文件不存在!"
          exit 1
        }

    - name: 设置 Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pyinstaller pyautogui --no-cache-dir
        pip install pillow

    - name: 验证图标文件存在
      run: |
        if (Test-Path "img/logo.png") {
          Write-Output "图标文件存在: img/logo.png"
        } else {
          Write-Output "图标文件不存在，退出..."
          exit 1
        }

    - name: 转换图标格式
      run: |
        python -c "from PIL import Image; Image.open('img/logo.png').save('img/logo.ico', format='ICO', sizes=[(256, 256), (128, 128), (64, 64), (48, 48), (32, 32), (16, 16)])"
        Write-Output "图标已转换为 ICO 格式"

    - name: 编译程序
      run: |
        pyinstaller --onefile --windowed --icon=img/logo.ico --name="NamePick" main.py
        Write-Output "Windows 程序编译完成"

    - name: 创建安装包
      run: |
        mkdir dist/installer
        Copy-Item dist/NamePick.exe dist/installer/
        Write-Output "Windows 安装包已创建"

    - name: 上传安装包
      uses: actions/upload-artifact@v4
      with:
        name: NamePick
        path: dist/installer/
        retention-days: 7